{"ast":null,"code":"var _jsxFileName = \"/Users/alexevers/Desktop/code/repos/reactPractice/reactpractice/src/App.js\";\nimport React from \"react\";\nimport TimerInput from \"./components/TimerInput\";\nimport Timer from './components/Timer';\nimport StartButton from './components/StartButton';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: '00',\n      minutes: '00'\n    };\n    let secondsRemaining;\n    let intervalHandle;\n    this.handleChange = this.handleChange.bind(this);\n    this.startCountdown = this.startCountdown.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      // minutes: event.target.value,\n      // seconds: event.target.value\n      [name]: value\n    });\n  }\n\n  tick() {\n    console.log('state secs', this.state.seconds);\n    console.log('secsleft', this.secondsRemaining);\n    const min = Math.floor(this.secondsRemaining / 60);\n    console.log('min', min * 60);\n    const sec = this.secondsRemaining - min * 60;\n    console.log('sec', sec);\n    this.setState({\n      minutes: min,\n      seconds: sec\n    });\n\n    if (sec < 10) {\n      this.setState({\n        seconds: '0' + this.state.seconds\n      });\n    }\n\n    if (min < 10) {\n      this.setState({\n        value: '0' + min\n      });\n    }\n\n    if (min === 0 && sec === 0) {\n      clearInterval(this.intervalHandle);\n    }\n\n    this.secondsRemaining--;\n  }\n\n  startCountdown() {\n    let time = this.state.minutes;\n    this.secondsRemaining = time * 60;\n    console.log(this.secondsRemaining);\n    this.intervalHandle = setInterval(this.tick, 1000);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(TimerInput, {\n      minutes: this.state.minutes,\n      seconds: this.state.seconds,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      minutes: this.state.minutes,\n      seconds: this.state.seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(StartButton, {\n      startCountdown: this.startCountdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexevers/Desktop/code/repos/reactPractice/reactpractice/src/App.js"],"names":["React","TimerInput","Timer","StartButton","App","Component","constructor","props","state","seconds","minutes","secondsRemaining","intervalHandle","handleChange","bind","startCountdown","tick","event","target","name","value","setState","console","log","min","Math","floor","sec","clearInterval","time","setInterval","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TimerInput from \"./components/TimerInput\";\nimport Timer from './components/Timer';\nimport StartButton from './components/StartButton'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: '00',\n      minutes: '00'\n    }\n    let secondsRemaining;\n\n    let intervalHandle;\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.startCountdown = this.startCountdown.bind(this);\n\n    this.tick = this.tick.bind(this);\n  }\n  \n  handleChange(event) {\n    const { name, value } = event.target\n    this.setState({\n      // minutes: event.target.value,\n      // seconds: event.target.value\n      [name]: value\n    })\n  }\n\n  tick () {\n    console.log('state secs', this.state.seconds);\n    console.log('secsleft', this.secondsRemaining);\n    const min = Math.floor(this.secondsRemaining / 60);\n    console.log('min', min * 60);\n    const sec = this.secondsRemaining - (min * 60);\n    console.log('sec', sec);\n\n    this.setState({\n      minutes: min,\n      seconds: sec\n    })\n\n    if (sec < 10) {\n      this.setState({\n        seconds: '0' + this.state.seconds\n      })\n    }\n\n    if (min < 10) {\n      this.setState({\n        value: '0' + min\n      })\n    }\n\n    if (min === 0 && sec === 0) {\n      clearInterval(this.intervalHandle)\n    }\n\n    this.secondsRemaining--;\n  }\n\n  startCountdown() {\n    let time = this.state.minutes;\n    this.secondsRemaining = (time * 60);\n    console.log(this.secondsRemaining);\n    this.intervalHandle = setInterval(this.tick, 1000);\n  }\n\n\n  render() {\n    return (\n      <>\n        <TimerInput minutes={this.state.minutes} seconds={this.state.seconds} handleChange={this.handleChange} />\n        <Timer minutes={this.state.minutes} seconds={this.state.seconds} />\n        <StartButton startCountdown={this.startCountdown} />\n      </>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}