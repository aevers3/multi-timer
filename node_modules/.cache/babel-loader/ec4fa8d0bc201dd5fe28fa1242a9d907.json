{"ast":null,"code":"var _jsxFileName = \"/Users/alexevers/Desktop/code/repos/multi-timer/src/components/Clock/index.js\";\nimport React from 'react';\nimport TimerInput from \"../TimerInput\";\nimport Timer from '../Timer';\nimport StartButton from '../StartButton';\nimport StopButton from '../StopButton';\nimport ClockName from '../ClockName';\nimport './style.css';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: '00',\n      minutes: '00'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.startCountdown = this.startCountdown.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      // minutes: event.target.value,\n      // seconds: event.target.value\n      [name]: value\n    });\n  }\n\n  tick() {\n    console.log('secsleft', this.secondsRemaining);\n    const min = Math.floor(this.secondsRemaining / 60);\n    console.log('min', min * 60);\n    const sec = this.secondsRemaining - min * 60;\n    console.log('sec', sec);\n    this.setState({\n      minutes: min,\n      seconds: sec\n    });\n\n    if (sec < 10) {\n      this.setState({\n        seconds: '0' + this.state.seconds\n      });\n    }\n\n    if (min < 10) {\n      this.setState({\n        value: '0' + min\n      });\n    }\n\n    if (min === 0 && sec === 0) {\n      clearInterval(this.intervalHandle);\n    }\n\n    this.secondsRemaining--;\n  }\n\n  startCountdown() {\n    console.log(this.state.seconds);\n    let min = this.state.minutes;\n    console.log(min);\n    this.secondsRemaining = min * 60 + (parseInt(this.state.seconds) - 1);\n    console.log('secs', this.secondsRemaining);\n    this.intervalHandle = setInterval(this.tick, 1000);\n  }\n\n  stopCountdown() {\n    console.log('stop hit');\n    clearInterval(this.intervalHandle);\n  } // removeClock() {\n  //   clearInterval(this.intervalHandle);\n  // }\n\n\n  render() {\n    if (this.state.minutes !== '00' || this.state.seconds !== '00') {\n      return React.createElement(\"div\", {\n        className: \"clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(ClockName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(TimerInput, {\n        minutes: this.state.minutes,\n        seconds: this.state.seconds,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Timer, {\n        minutes: this.state.minutes,\n        seconds: this.state.seconds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(StartButton, {\n        startCountdown: this.startCountdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(StopButton, {\n        stopCountdown: this.stopCountdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(ClockName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(TimerInput, {\n        minutes: this.state.minutes,\n        seconds: this.state.seconds,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Timer, {\n        minutes: this.state.minutes,\n        seconds: this.state.seconds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Clock;","map":{"version":3,"sources":["/Users/alexevers/Desktop/code/repos/multi-timer/src/components/Clock/index.js"],"names":["React","TimerInput","Timer","StartButton","StopButton","ClockName","Clock","Component","constructor","props","state","seconds","minutes","handleChange","bind","startCountdown","tick","event","target","name","value","setState","console","log","secondsRemaining","min","Math","floor","sec","clearInterval","intervalHandle","parseInt","setInterval","stopCountdown","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TimerInput from \"../TimerInput\";\nimport Timer from '../Timer';\nimport StartButton from '../StartButton';\nimport StopButton from '../StopButton';\nimport ClockName from '../ClockName';\nimport './style.css';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: '00',\n      minutes: '00'\n    }\n    \n    this.handleChange = this.handleChange.bind(this);\n\n    this.startCountdown = this.startCountdown.bind(this);\n\n    this.tick = this.tick.bind(this);\n  }\n  \n  handleChange(event) {\n    const { name, value } = event.target\n    this.setState({\n      // minutes: event.target.value,\n      // seconds: event.target.value\n      [name]: value\n    })\n  }\n\n  tick () {\n    console.log('secsleft', this.secondsRemaining);\n    const min = Math.floor(this.secondsRemaining / 60);\n    console.log('min', min * 60);\n    const sec = this.secondsRemaining - (min * 60);\n    console.log('sec', sec);\n\n    this.setState({\n      minutes: min,\n      seconds: sec\n    })\n\n    if (sec < 10) {\n      this.setState({\n        seconds: '0' + this.state.seconds\n      })\n    }\n\n    if (min < 10) {\n      this.setState({\n        value: '0' + min\n      })\n    }\n\n    if (min === 0 && sec === 0) {\n      clearInterval(this.intervalHandle)\n    }\n\n    this.secondsRemaining--;\n  }\n\n  startCountdown() {\n    console.log(this.state.seconds)\n    let min = this.state.minutes;\n    console.log(min);\n    this.secondsRemaining = (min * 60 + (parseInt(this.state.seconds) - 1));\n    console.log('secs', this.secondsRemaining)\n    this.intervalHandle = setInterval(this.tick, 1000);\n  }\n\n  stopCountdown() {\n    console.log('stop hit')\n    clearInterval(this.intervalHandle);\n  }\n\n  // removeClock() {\n  //   clearInterval(this.intervalHandle);\n  // }\n\n\n  render() {\n    if (this.state.minutes !== '00' || this.state.seconds !== '00') {\n      return (\n        <div className='clock'>\n        <ClockName />\n        <TimerInput minutes={this.state.minutes} seconds={this.state.seconds} handleChange={this.handleChange} />\n        <Timer minutes={this.state.minutes} seconds={this.state.seconds} />\n        <StartButton startCountdown={this.startCountdown} />\n        <StopButton stopCountdown={this.stopCountdown} />\n      </div>\n    )\n  } else {\n    return (\n      <div className='clock'>\n      <ClockName />\n      <TimerInput minutes={this.state.minutes} seconds={this.state.seconds} handleChange={this.handleChange} />\n      <Timer minutes={this.state.minutes} seconds={this.state.seconds} />\n    </div>\n  )\n  }\n  }\n}\n\nexport default Clock;\n"]},"metadata":{},"sourceType":"module"}